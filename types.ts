// types.ts

/**
 * Interface de base pour un utilisateur
 */
export interface BaseUser {
  id: string;
  phone: string;
  fullname?: string;
  email?: string;
  avatar?: string; // URL ou identifiant d'avatar
  isProfileComplete?: boolean;
  createdAt?: string; // Format ISO 8601
  updatedAt?: string; // Format ISO 8601
}

/**
 * Interface pour un utilisateur de type 'client'
 */
export interface ClientUser extends BaseUser {
  type: 'client';
}

/**
 * Interface pour un utilisateur de type 'transporter'
 * Inclut les informations essentielles pour la v√©rification et la gestion
 */
export interface TransporterUser extends BaseUser {
  type: 'transporter';
  vehicleId?: string; // ID du v√©hicule associ√© au transporteur
  hasActiveSubscription?: boolean; // Indique si le transporteur a un abonnement actif
  isVerified?: boolean; // Statut de v√©rification du transporteur par l'administration
  isOnline?: boolean; // Statut en ligne/hors ligne du transporteur

  // Informations sur le permis de conduire
  driverLicenseNumber?: string;
  driverLicenseCategory?: string; // Cat√©gorie du permis (A, B, C, D, etc.)
  driverLicenseIssueDate?: string; // Format ISO 8601 (YYYY-MM-DD)
  driverLicenseExpiry?: string; // Format ISO 8601 (YYYY-MM-DD)
  driverLicenseImage?: string; // URL de l'image du permis de conduire

  // Informations professionnelles
  yearsOfExperience?: number;
  languagesSpoken?: string[]; // Langues parl√©es
  workingHours?: {
    start: string; // Format HH:MM
    end: string; // Format HH:MM
  };

  // Statistiques et √©valuations
  totalRides?: number;
  averageRating?: number;
  totalEarnings?: number;
  completionRate?: number; // Pourcentage de courses termin√©es avec succ√®s

  // Dates importantes
  lastActiveAt?: string; // Derni√®re activit√© en ligne
  verifiedAt?: string; // Date de v√©rification du compte
  suspendedAt?: string; // Date de suspension (si applicable)
  suspensionReason?: string; // Raison de la suspension
}

/**
 * Type union pour tous les types d'utilisateurs
 */
export type User = ClientUser | TransporterUser;

/**
 * Interface pour un v√©hicule avec informations d√©taill√©es
 */
export interface Vehicle {
  id: string;
  type: 'truck' | 'motorcycle' | 'van' | 'car';
  model: string;
  brand: string; // Marque du v√©hicule
  year?: number; // Ann√©e de fabrication
  color?: string; // Couleur du v√©hicule
  licensePlate: string;
  capacity: number; // Capacit√© en kg ou nombre de passagers
  pricePerKm: number;
  pricePerKg?: number; // Optionnel, pour le transport de marchandises
  image?: string; // URL de l'image du v√©hicule
  transporterId: string; // ID du transporteur propri√©taire du v√©hicule

  // Informations techniques du v√©hicule
  engineNumber?: string;
  chassisNumber?: string;
  fuelType?: 'gasoline' | 'diesel' | 'electric' | 'hybrid';
  mileage?: number; // Kilom√©trage actuel

  // Documents du v√©hicule
  registrationNumber?: string;
  registrationExpiry?: string; // Format ISO 8601 (YYYY-MM-DD)
  registrationImage?: string; // URL de l'image de la carte grise

  // Statut et maintenance
  isActive?: boolean; // V√©hicule actif ou non
  lastMaintenanceDate?: string; // Format ISO 8601 (YYYY-MM-DD)
  nextMaintenanceDate?: string; // Format ISO 8601 (YYYY-MM-DD)
  
  createdAt?: string; // Format ISO 8601
  updatedAt?: string; // Format ISO 8601
}

/**
 * Interface pour une m√©thode de paiement
 */
export interface PaymentMethod {
  id: string;
  type: 'mobile_money' | 'card';
  name: string;
  icon: string; // Repr√©sentation textuelle de l'ic√¥ne (ex: 'üì±')
  description: string;
  isActive?: boolean;
}

/**
 * Interface pour un plan d'abonnement
 */
export interface SubscriptionPlan {
  id: string;
  name: string;
  price: number;
  duration: number; // Dur√©e en jours
  features: string[]; // Liste des fonctionnalit√©s incluses
  popular?: boolean; // Indique si le plan est populaire
  isActive?: boolean;
  createdAt?: string; // Format ISO 8601
  updatedAt?: string; // Format ISO 8601
}

/**
 * Interface pour un abonnement actif
 */
export interface Subscription {
  id: string;
  transporterId: string;
  planId: string;
  startDate: string; // Format ISO 8601
  endDate: string; // Format ISO 8601
  isActive: boolean;
  paymentMethod: string;
  transactionId?: string;
  createdAt: string; // Format ISO 8601
  updatedAt: string; // Format ISO 8601
}

/**
 * Interface de base pour une course
 */
export interface BaseRide {
  id: string;
  pickup: string; // Adresse de d√©part
  destination: string; // Adresse de destination
  estimatedPrice: number;
  distance: string; // Ex: "12 km"
  time: string; // Ex: "25 min"
  vehicleType: string; // Ex: "Moto", "Camion"
  serviceType: string; // Ex: "Express", "Standard"
  transportType: string; // Ex: "goods", "people"
}

/**
 * Interface pour une course disponible ou historique
 */
export interface Ride extends BaseRide {
  clientId: string; // ID du client qui a r√©serv√© la course
  transporterId?: string; // ID du transporteur qui a effectu√© la course (si accept√©e/termin√©e)
  clientName: string; // Nom du client (pour affichage)
  transporterName?: string; // Nom du transporteur (pour affichage)
  status: 'available' | 'accepted' | 'pickup' | 'inProgress' | 'completed' | 'cancelled';
  date?: string; // Date de la course (pour l'historique)
  rating?: number; // Note donn√©e par le client
  comment?: string; // Commentaire du client
  ratedAt?: string; // Date de l'√©valuation
  
  // Coordonn√©es GPS
  pickupCoordinates?: { latitude: number; longitude: number };
  destinationCoordinates?: { latitude: number; longitude: number };
  
  // Informations de paiement
  paymentMethod?: string;
  paymentStatus?: 'pending' | 'completed' | 'failed' | 'refunded';
  transactionId?: string;
  
  createdAt?: string; // Format ISO 8601
  updatedAt?: string; // Format ISO 8601
}

/**
 * Interface pour une course active (suivie par le transporteur ou le client)
 */
export interface ActiveRide extends BaseRide {
  clientId: string;
  transporterId: string;
  clientName: string;
  transporterName: string;
  status: 'accepted' | 'pickup' | 'inProgress' | 'completed';
  acceptedAt: Date; // Date et heure d'acceptation de la course
  
  // Coordonn√©es GPS pour le suivi en temps r√©el
  pickupCoordinates?: { latitude: number; longitude: number };
  destinationCoordinates?: { latitude: number; longitude: number };
  currentLocation?: { latitude: number; longitude: number };
}

/**
 * Interface pour les r√©sultats de recherche de transporteurs (vue simplifi√©e pour le client)
 */
export interface TransporterSearchResult {
  id: string;
  name: string;
  rating: number;
  distance: string;
  vehicle: string; // Type de v√©hicule en string (ex: "Toyota Hilux")
  price: number; // Prix estim√© pour la course
  location: { latitude: number; longitude: number }; // Position actuelle du transporteur
  phone: string;
  reviews: number;
  vehicleImage?: string; // URL de l'image du v√©hicule
  isVerified?: boolean;
  responseTime?: string; // Temps de r√©ponse moyen
}

/**
 * Interface pour les √©valuations/ratings
 */
export interface Rating {
  id: string;
  rideId: string;
  clientId: string;
  transporterId: string;
  overallRating: number; // Note globale (1-5)
  punctuality: number; // Ponctualit√© (1-5)
  safety: number; // S√©curit√© (1-5)
  vehicleCondition: number; // √âtat du v√©hicule (1-5)
  serviceQuality: number; // Qualit√© du service (1-5)
  comment?: string;
  createdAt: string; // Format ISO 8601
}

/**
 * Interface pour les transactions de paiement
 */
export interface PaymentTransaction {
  id: string;
  type: 'subscription' | 'ride';
  userId: string; // ID du payeur
  amount: number;
  currency: string; // Ex: 'USD', 'CDF'
  paymentMethodId: string;
  status: 'pending' | 'completed' | 'failed' | 'cancelled' | 'refunded';
  transactionReference?: string; // R√©f√©rence externe (Stripe, mobile money, etc.)
  rideId?: string; // Si c'est un paiement de course
  subscriptionId?: string; // Si c'est un paiement d'abonnement
  createdAt: string; // Format ISO 8601
  updatedAt: string; // Format ISO 8601
}

/**
 * Interface pour les notifications
 */
export interface Notification {
  id: string;
  userId: string;
  type: 'ride_request' | 'ride_accepted' | 'ride_completed' | 'payment' | 'system';
  title: string;
  message: string;
  isRead: boolean;
  data?: any; // Donn√©es suppl√©mentaires sp√©cifiques au type de notification
  createdAt: string; // Format ISO 8601
}

/**
 * Interface pour les param√®tres de l'application
 */
export interface AppSettings {
  id: string;
  userId: string;
  notifications: {
    rideRequests: boolean;
    promotions: boolean;
    systemUpdates: boolean;
  };
  privacy: {
    shareLocation: boolean;
    shareProfile: boolean;
  };
  language: string; // Code de langue (ex: 'fr', 'en')
  currency: string; // Devise pr√©f√©r√©e
  createdAt: string; // Format ISO 8601
  updatedAt: string; // Format ISO 8601
}